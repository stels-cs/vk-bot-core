const Core = require('./src/core')
const {Keyboard, DefaultBtn, NegativeBtn, PositiveBtn, PrimaryBtn} = require('./src/keyboard')
const vk_token = process.env.VK_TOKEN

const core = new Core(vk_token)

core.onUpdate = update => console.log(update.type, update['object'])

core.on("message_new", msg => msg.HasText(["группа","test"]), msg => {
	if (msg.GetUser().member === 1) {
		return "Вы состоите в группе"
	}

	if (msg.GetUser().member === 0) {
		return "Вы вышли из группы"
	}

	return "Чет хз, в группе вы или нет"
})

core.on("message_new", msg => msg.HasText("Привет"), msg => `Привет ${msg.GetUser().first_name}!`)

core.on("message_new", msg => msg.HasText("await"), async msg => {
	function timer() {
		return new Promise( r => setTimeout(r, 1000) )
	}

	await timer()

	return `Сообщение с задержкой в секунду`
})

core.on("message_new", msg => msg.Button() === "next_btn", () => Keyboard(`Вы нажали конпку Далее`, [ [ DefaultBtn("Назад") ] ], true))

core.on("message_new", () => Keyboard("Привет", [
	[ DefaultBtn("Привет") ],
	[ PositiveBtn("await") ],
	[ NegativeBtn("test") ],
	[ PrimaryBtn("Далее", "next_btn") ],
]))

core.on("message_typing_state", state => state.IsFirstTyping(), ev => `Привет ${ev.GetUser().first_name}, чего хотел?`)

core.start()